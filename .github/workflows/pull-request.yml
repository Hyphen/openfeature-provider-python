name: PR Check

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

# Cancel any jobs in-progress for the current branch
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-dependencies.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '1.8.1'
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Cache virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Lint
        run: |
          poetry run ruff check .
          poetry run black --check .

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '1.8.1'
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Cache virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Test
        run: poetry run pytest

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '1.8.1'
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Cache virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Build
        run: poetry build
